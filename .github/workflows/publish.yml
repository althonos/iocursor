name: Publish to PyPI

on:
  push:
    tags:
      - v*.*.*

jobs:

  wheel-linux:
    runs-on: ubuntu-latest
    name: Build Linux wheels
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Build manylinux wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.3
      with:
        build-requirements: 'setuptools'
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
          name: wheels
          path: dist/*

  wheel-osx:
    runs-on: macos-latest
    name: Build OSX wheels
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build package
      run: python -m pip install -U build pip setuptools
    - name: Build wheel distribution
      run: python -m build --wheel --outdir dist
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
          name: wheels
          path: dist/*

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Upload
    needs:
    - wheel-linux
    - wheel-osx
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: '3.10'
    - name: Install build package
      run: python -m pip install -U build
    - name: Build source tarball
      run: python -m build --sdist --outdir dist
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: wheels
          path: dist
    - name: Remove unsupported wheels
      run: rm dist/*-linux_x86_64.whl
    - name: Publish distributions to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Release
    needs: upload
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
